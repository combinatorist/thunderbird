From: Carsten Schoenert <c.schoenert@t-online.de>
Date: Tue, 6 Feb 2018 21:21:23 +0100
Subject: Fix big endian build for SKIA

Some parts of the skia source are currently not prepared for building on
big endian platforms.
---
 mozilla/gfx/skia/skia/include/core/SkColorPriv.h | 5 +++--
 mozilla/gfx/skia/skia/include/core/SkImageInfo.h | 3 ++-
 mozilla/gfx/skia/skia/include/gpu/GrColor.h      | 7 ++++++-
 mozilla/gfx/skia/skia/include/gpu/GrTypes.h      | 6 ++----
 4 files changed, 13 insertions(+), 8 deletions(-)

diff --git a/mozilla/gfx/skia/skia/include/core/SkColorPriv.h b/mozilla/gfx/skia/skia/include/core/SkColorPriv.h
index 12c2277..4cc94c0 100644
--- a/mozilla/gfx/skia/skia/include/core/SkColorPriv.h
+++ b/mozilla/gfx/skia/skia/include/core/SkColorPriv.h
@@ -31,7 +31,7 @@
  *
  *  Here we enforce this constraint.
  */
-
+/*
 #ifdef SK_CPU_BENDIAN
     #define SK_RGBA_R32_SHIFT   24
     #define SK_RGBA_G32_SHIFT   16
@@ -43,6 +43,7 @@
     #define SK_BGRA_R32_SHIFT   8
     #define SK_BGRA_A32_SHIFT   0
 #else
+*/
     #define SK_RGBA_R32_SHIFT   0
     #define SK_RGBA_G32_SHIFT   8
     #define SK_RGBA_B32_SHIFT   16
@@ -52,7 +53,7 @@
     #define SK_BGRA_G32_SHIFT   8
     #define SK_BGRA_R32_SHIFT   16
     #define SK_BGRA_A32_SHIFT   24
-#endif
+/*#endif*/
 
 #if defined(SK_PMCOLOR_IS_RGBA) && defined(SK_PMCOLOR_IS_BGRA)
     #error "can't define PMCOLOR to be RGBA and BGRA"
diff --git a/mozilla/gfx/skia/skia/include/core/SkImageInfo.h b/mozilla/gfx/skia/skia/include/core/SkImageInfo.h
index 4a8c286..44db8e0 100644
--- a/mozilla/gfx/skia/skia/include/core/SkImageInfo.h
+++ b/mozilla/gfx/skia/skia/include/core/SkImageInfo.h
@@ -83,7 +83,8 @@ enum SkColorType {
 #elif SK_PMCOLOR_BYTE_ORDER(R,G,B,A)
     kN32_SkColorType = kRGBA_8888_SkColorType,
 #else
-    #error "SK_*32_SHFIT values must correspond to BGRA or RGBA byte order"
+    //#error "SK_*32_SHFIT values must correspond to BGRA or RGBA byte order"
+    kN32_SkColorType = kBGRA_8888_SkColorType
 #endif
 };
 
diff --git a/mozilla/gfx/skia/skia/include/gpu/GrColor.h b/mozilla/gfx/skia/skia/include/gpu/GrColor.h
index ad66523..dfc55a4 100644
--- a/mozilla/gfx/skia/skia/include/gpu/GrColor.h
+++ b/mozilla/gfx/skia/skia/include/gpu/GrColor.h
@@ -74,8 +74,13 @@ static inline GrColor GrColorPackA4(unsigned a) {
  *  Since premultiplied means that alpha >= color, we construct a color with
  *  each component==255 and alpha == 0 to be "illegal"
  */
-#define GrColor_ILLEGAL     (~(0xFF << GrColor_SHIFT_A))
+//Just for big endian platforms, little has: (~(0xFF << GrColor_SHIFT_A))
+#ifdef SK_CPU_BENDIAN
+#define GrColor_ILLEGAL     0xFFFFFF00
+#else
+#define GrColor_ILLEGAL     (~(0xFF << GrColor_SHIFT_A)) 
 
+#endif
 #define GrColor_WHITE 0xFFFFFFFF
 #define GrColor_TRANSPARENT_BLACK 0x0
 
diff --git a/mozilla/gfx/skia/skia/include/gpu/GrTypes.h b/mozilla/gfx/skia/skia/include/gpu/GrTypes.h
index 62e8a79..86158fb 100644
--- a/mozilla/gfx/skia/skia/include/gpu/GrTypes.h
+++ b/mozilla/gfx/skia/skia/include/gpu/GrTypes.h
@@ -326,15 +326,13 @@ enum GrPixelConfig {
 static const int kGrPixelConfigCnt = kLast_GrPixelConfig + 1;
 
 // Aliases for pixel configs that match skia's byte order.
-#ifndef SK_CPU_LENDIAN
-    #error "Skia gpu currently assumes little endian"
-#endif
 #if SK_PMCOLOR_BYTE_ORDER(B,G,R,A)
     static const GrPixelConfig kSkia8888_GrPixelConfig = kBGRA_8888_GrPixelConfig;
 #elif SK_PMCOLOR_BYTE_ORDER(R,G,B,A)
     static const GrPixelConfig kSkia8888_GrPixelConfig = kRGBA_8888_GrPixelConfig;
 #else
-    #error "SK_*32_SHIFT values must correspond to GL_BGRA or GL_RGBA format."
+    static const GrPixelConfig kSkia8888_GrPixelConfig = kBGRA_8888_GrPixelConfig;
+    static const GrPixelConfig kSkiaGamma8888_GrPixelConfig = kSBGRA_8888_GrPixelConfig;
 #endif
 
 // Returns true if the pixel config is a GPU-specific compressed format
